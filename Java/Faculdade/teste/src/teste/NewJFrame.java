package teste;

import java.util.Timer;
import java.util.TimerTask;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author Victor Gabriel Dalacorte, Reginaldo Daniel Ferreira
 */

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();

    }

    int x = 0, y;
    boolean canFlap = false;
    public ArrayList<Cano> canos = new ArrayList<>();
    HitBox hb = new HitBox();
    public Random gerador = new Random();
    boolean endGame = true;
    int score = 0, highScore = 0;
    Som s = new Som();
    Timer timer9 = null;
    Timer timer3 = null;
    Timer timer11 = null;
    Timer timer5 = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblScore = new javax.swing.JLabel();
        lblHighScore = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        lblGameOver = new javax.swing.JLabel();
        lblPassaro = new javax.swing.JLabel();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(380, 550));

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(null);

        lblScore.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        lblScore.setText("Score: 0");
        jPanel2.add(lblScore);
        lblScore.setBounds(280, 100, 100, 17);

        lblHighScore.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        lblHighScore.setText("High Score: 0");
        jPanel2.add(lblHighScore);
        lblHighScore.setBounds(280, 120, 90, 17);

        btnIniciar.setBackground(new java.awt.Color(255, 255, 255));
        btnIniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/teste-17.gif"))); // NOI18N
        btnIniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIniciarMouseClicked(evt);
            }
        });
        jPanel2.add(btnIniciar);
        btnIniciar.setBounds(0, 0, 380, 512);
        btnIniciar.getAccessibleContext().setAccessibleName("btnIniciar");

        lblGameOver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/gameover11.gif"))); // NOI18N
        jPanel2.add(lblGameOver);
        lblGameOver.setBounds(0, 0, 380, 512);

        lblPassaro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/teste-6.gif"))); // NOI18N
        jPanel2.add(lblPassaro);
        lblPassaro.setBounds(10, 80, 51, 32);

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fundo.jpg"))); // NOI18N
        jPanel2.add(fundo);
        fundo.setBounds(-760, 0, 1140, 512);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIniciarMouseClicked
        // TODO add your handling code here:

        try {
            timer9.cancel();
            timer3.cancel();
            timer11.cancel();
            timer5.cancel();
        } catch (Exception e) {
        }

        final long SEGUNDOS = (1);
        Passaro p = new Passaro(10, 10);
        p.cont = 0;
        fundo.setLocation(-760, 0);
        x = fundo.getX();
        y = fundo.getY();
        btnIniciar.setVisible(false);
        lblPassaro.setLocation(10, 80);
        score = 0;
        lblScore.setText("Score: " + score);
        endGame = true;
        lblGameOver.setVisible(false);
        lblPassaro.setVisible(true);

        timer9 = null;
        long TEMPO = (1000 * 2); // chama o método a cada 3 segundos 
        if (timer9 == null) {
            timer9 = new Timer();
            TimerTask tarefa9 = new TimerTask() {
                @Override
                public void run() {
                    try {
                        //chama o método
                        if (endGame == true) {
                            canos.add(new Cano(jPanel2.getWidth() + 10, gerador.nextInt(jPanel2.getHeight() - 112 - 200)));//150=holesize

                            for (Cano cano : canos) {
                                jPanel2.add(cano.label5);
                                jPanel2.add(cano.label6);
                                jPanel2.setComponentZOrder(cano.label5, 0);
                                jPanel2.setComponentZOrder(cano.label6, 0);

                            }

                        }

                    } catch (Exception e) {
                        // e.printStackTrace();
                    }

                }
            };
            timer9.scheduleAtFixedRate(tarefa9, TEMPO, TEMPO);
        }

        // -------- Timer Chão----------
        timer3 = new Timer();
        TimerTask tarefa3 = new TimerTask() {
            @Override
            public void run() {
                if (endGame == true) {
                    try {
                        for (Cano cano : canos) {

                            if ((hb.bateu(cano.label5, lblPassaro) || hb.bateu(cano.label6, lblPassaro)) && endGame == true) {
                                endGame = false;
                                timer3.cancel();

                            }
                            cano.update();

                        }
                    } catch (Exception e) {
                        //e.printStackTrace();
                    }

                    if (x >= 0) {
                        x = (-760);
                        fundo.setLocation(x, y);

                    }
                    fundo.setLocation(x += 1, y);

                    if (lblPassaro.getY() >= 500 && endGame == true) {

                        endGame = false;
                    }

                    if (lblPassaro.getY() <= 0 && endGame == true) {

                        endGame = false;
                    }
                    if (endGame == false) {
                        timer11 = new Timer();
                        TimerTask tarefa11 = new TimerTask() {
                            @Override
                            public void run() {

                                try {

                                    for (Cano cano : canos) {
                                        jPanel2.remove(cano.label5);
                                        jPanel2.remove(cano.label6);
                                    }
                                    s.play("src/sons/meows.wav");
                                    canos.clear();
                                    lblPassaro.setVisible(false);
                                    lblGameOver.setVisible(true);
                                    Thread.sleep(3000);
                                    lblGameOver.setVisible(false);
                                    btnIniciar.setVisible(true);

                                    timer11.cancel();

                                } catch (Exception e) {
                                //e.printStackTrace();

                                }

                            }

                        };
                        timer11.scheduleAtFixedRate(tarefa11, 0, 5);

                    }

                }
            }
        };
        timer3.scheduleAtFixedRate(tarefa3, 0, 5);

        // ----------- Timer gravidade passaro
        timer5 = new Timer();
        TimerTask tarefa5 = new TimerTask() {
            @Override
            public void run() {

                if (canFlap == false) {
                    p.x = lblPassaro.getX();
                    p.y = lblPassaro.getY() + 1;
                    lblPassaro.setLocation(lblPassaro.getX(), (lblPassaro.getY() + 1));

                }

            }
        };
        timer5.scheduleAtFixedRate(tarefa5, 0, 5);

        //-------- Timer Canos -------

    }//GEN-LAST:event_btnIniciarMouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        Passaro p = new Passaro(10, 10);
        Timer timer6 = new Timer();
        TimerTask tarefa6 = new TimerTask() {
            @Override
            public void run() {

                p.cont++;
                canFlap = true;

                if (p.cont <= 40 && p.cont > 1 && canFlap == true) {
                    p.x = lblPassaro.getX();
                    p.y = lblPassaro.getY() - 1;
                    lblPassaro.setLocation(lblPassaro.getX(), (lblPassaro.getY() - 1));

                }

                if (p.cont > 40 && canFlap == true) {
                    timer6.cancel();
                    p.cont = 0;
                    canFlap = false;
                    p.x = lblPassaro.getX();
                    p.y = lblPassaro.getY() + 1;
                    lblPassaro.setLocation(lblPassaro.getX(), (lblPassaro.getY() + 1));

                }

                if (canos.size() > 0 && canos.get(0).x < -130) {
                    s.play("src/sons/meows.wav");
                    canos.remove(0);
                    System.out.println("Cano Removido");
                    System.out.println(canos.size());
                    score++;
                    lblScore.setText("Pontuação: " + score);
                    if (score > highScore) {
                        highScore = score;
                        lblHighScore.setText("Melhor pontuação: " + highScore);
                    }
                }

            }
        };
        timer6.scheduleAtFixedRate(tarefa6, 0, 5);


    }//GEN-LAST:event_jPanel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
                Som som = new Som();
                som.loop("src/sons/nyan-cat.wav");

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel fundo;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblGameOver;
    private javax.swing.JLabel lblHighScore;
    public javax.swing.JLabel lblPassaro;
    private javax.swing.JLabel lblScore;
    // End of variables declaration//GEN-END:variables
}
